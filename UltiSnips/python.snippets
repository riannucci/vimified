snippet pl "pylint disable"
# pylint: disable=${1}
endsnippet

snippet main "main"
def main():
  ${1}


if __name__ == '__main__':
  main()
endsnippet

snippet mainr "main return"
import sys

def main(argv):
  ${1}
  return 0


if __name__ == '__main__':
  sys.exit(main(sys.argv))
endsnippet

snippet mainu "unittest main"
#!/usr/bin/env python
import unittest

class Test${1}(unittest.TestCase):
  pass

if __name__ == '__main__':
  unittest.main()
endsnippet

snippet #! "shebang!"
#!/usr/bin/env python
# Copyright `date +%Y` The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
endsnippet

snippet ## "comment"
# Copyright `date +%Y` The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
endsnippet

snippet nocover "no cover pragma"
# pragma: no cover
endsnippet

snippet todo "todo comment"
# TODO(iannucci): ${1}
endsnippet

snippet maini "infra __main__ template"
# Copyright `date +%Y` The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""${1}"""

import argparse
import sys


def parse_args(argv):
  p = argparse.ArgumentParser('./run.py %s' % __package__)
  o = p.parse_args(argv)
  return o


def main(argv):
  o = parse_args(argv)
  return 0


if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
endsnippet
